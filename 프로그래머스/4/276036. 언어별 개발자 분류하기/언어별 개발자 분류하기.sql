SELECT CASE 
        WHEN EXISTS(SELECT CODE FROM SKILLCODES WHERE CODE & SKILL_CODE AND NAME = 'Python')
        AND EXISTS(SELECT CODE FROM SKILLCODES WHERE CODE & SKILL_CODE AND CATEGORY = 'Front End') THEN 'A'
        WHEN EXISTS(SELECT CODE FROM SKILLCODES WHERE CODE & SKILL_CODE AND NAME = 'C#') THEN 'B'
        WHEN EXISTS(SELECT CODE FROM SKILLCODES WHERE CODE & SKILL_CODE AND CATEGORY = 'Front End') THEN 'C'
    ELSE NULL END AS GRADE, ID, EMAIL
FROM DEVELOPERS
HAVING GRADE IS NOT NULL
ORDER BY GRADE, ID

# SELECT CASE
# WHEN SUM(CASE WHEN a.CATEGORY = 'Front End' THEN 1 ELSE 0 END) > 0 AND 
#             SUM(CASE WHEN a.NAME = 'Python' THEN 1 ELSE 0 END) > 0 THEN 'A'
# WHEN SUM(CASE WHEN a.NAME = 'C#' THEN 1 ELSE 0 END) > 0 THEN 'B'
# WHEN SUM(CASE WHEN a.CATEGORY = 'Front End' THEN 1 ELSE 0 END) > 0 THEN 'C' 
# END AS GRADE, b.ID, b.EMAIL
# FROM SKILLCODES AS a LEFT OUTER JOIN DEVELOPERS AS b
# ON a.CODE & b.SKILL_CODE
# GROUP BY b.ID, b.EMAIL
# HAVING GRADE IS NOT null
# ORDER BY GRADE ASC, b.ID ASC